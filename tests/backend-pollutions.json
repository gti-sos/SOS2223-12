{
	"info": {
		"_postman_id": "003f3c76-b89d-4078-b065-2fa928f9ecc7",
		"name": "Collection Pollutions",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25989057"
	},
	"item": [
		{
			"name": "/pollutions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"El numero de datos debe ser mayor que 0.\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.lengthOf.above(0);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions 201 CREATED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 201 CREATED.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"province\": \"sevilla\",\r\n        \"year\": 2027,\r\n        \"NO2\": 45,\r\n        \"O3\": 25.8,\r\n        \"SO2\": 4\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions nuevo elemento",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions/sevilla/2027 400 bad request",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"province\": \"sevilla\",\r\n        \"year\": 2028,\r\n        \"NO2\": 45,\r\n        \"O3\": 25.8,\r\n        \"SO2\": 4\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions/sevilla/2027",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions",
						"sevilla",
						"2027"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions 409 CONFLICT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 409 CONFLICT.\", function(){\r",
							"    pm.response.to.have.status(409);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"province\": \"sevilla\",\r\n        \"year\": 2027,\r\n        \"NO2\": 45,\r\n        \"O3\": 25.8,\r\n        \"SO2\": 4\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions/sevilla/2027",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions/sevilla/2027",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions",
						"sevilla",
						"2027"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions 201 CREATED Almeria",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 201 CREATED.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"province\": \"almeria\",\r\n        \"year\": 2020,\r\n        \"NO2\": 45,\r\n        \"O3\": 25.8,\r\n        \"SO2\": 4\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions/almeria",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"El numero de datos debe ser mayor que 0.\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.lengthOf.above(0);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions/almeria",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions",
						"almeria"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions/sevilla 200 ACTUALIZADO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"province\": \"almeria\",\r\n        \"year\": 2020,\r\n        \"NO2\": 45552222222222222222224,\r\n        \"O3\": 25.2348,\r\n        \"SO2\": 324\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions/almeria",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions",
						"almeria"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions/almeria actualizado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"El numero de datos debe ser mayor que 0.\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.lengthOf.above(0);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions/almeria",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions",
						"almeria"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions/almeria",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions/almeria",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions",
						"almeria"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions/sevilla",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions/sevilla",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions",
						"sevilla"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions?year=2020",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions?year=2020",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions"
					],
					"query": [
						{
							"key": "year",
							"value": "2020"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions/sevilla/2021",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions/sevilla/2021",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions",
						"sevilla",
						"2021"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions?from=2020&to=2021",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions?from=2020&to=2021",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions"
					],
					"query": [
						{
							"key": "from",
							"value": "2020"
						},
						{
							"key": "to",
							"value": "2021"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions/madrid/2028 ruta inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 404 NOT FOUND.\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions/madrid/2028",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions",
						"madrid",
						"2028"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions/sevilla (error 405)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"El código de error debe ser 405\", function () {\r",
							"\tpm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"province\": \"sevilla\",\r\n        \"year\": 2020,\r\n        \"NO2\": 45,\r\n        \"O3\": 25.8,\r\n        \"SO2\": 7\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions/sevilla",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions",
						"sevilla"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions missing field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 400 BAD REQUEST.\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"province\": \"sevilla\",\r\n        \"year\": 2020,\r\n        \"O3\": 25.8,\r\n        \"SO2\": 4\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions (error 405)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 405.\", function(){\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/pollutions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado debe ser 200.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"El numero de datos debe ser 10.\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.lengthOf(10);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/api/v1/pollutions",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"api",
						"v1",
						"pollutions"
					]
				}
			},
			"response": []
		}
	]
}